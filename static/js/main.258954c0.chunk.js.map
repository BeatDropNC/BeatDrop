{"version":3,"sources":["phaser/PhaserScene.js","phaser/CreateGame.js","components/ReactGameContainer.js","components/Menu.js","App.js","index.js"],"names":["PhaserScene","gameOver","player","undefined","score","gameInfo","playTime","this","load","spritesheet","frameWidth","frameHeight","console","log","cameras","main","setViewport","physics","add","sprite","body","setGravityY","setBounce","setCollideWorldBounds","cursors","input","keyboard","createCursorKeys","anims","create","key","frames","generateFrameNumbers","start","end","frameRate","repeat","frame","collider","platforms","scoreText","text","fontSize","fill","left","isDown","setVelocityX","play","right","up","setVelocityY","Phaser","Scene","PhaserGame","colorChoice","width","height","config","type","AUTO","default","arcade","gravity","y","debug","globals","scene","loop","now","startTime","Game","ReactGameContainer","colorProp","setColorChoice","setGameTime","useEffect","window","innerHeight","innerWidth","document","game","CreateGame","Math","round","getPlayTime","destroy","className","to","Menu","gameTime","chooseColor","color","onClick","id","App","useState","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"gTAMqBA,E,kDAEnB,aAAe,IAAD,uBACZ,cAAM,gBACDC,UAAW,EAChB,EAAKC,YAASC,EACd,EAAKC,MAAQ,EAJD,OAMZ,EAAKC,SAAW,CACdC,SAAU,GAPA,E,2CAYd,WAIEC,KAAKC,KAAKC,YAAY,OAClB,kBACA,CAAEC,WAAY,GAAIC,YAAa,KAEnCC,QAAQC,IAAIN,Q,oBAGd,WAIMA,KAAKO,QAAQC,KAAKC,YAAY,EAAG,EAAG,IAAK,KAUzCT,KAAKL,OAASK,KAAKU,QAAQC,IAAIC,OAAO,IAAK,EAAG,QAE9CZ,KAAKL,OAAOkB,KAAKC,YAAY,GAC7Bd,KAAKL,OAAOoB,UAAU,IACtBf,KAAKL,OAAOqB,uBAAsB,GAElChB,KAAKiB,QAAUjB,KAAKkB,MAAMC,SAASC,mBAEnCpB,KAAKqB,MAAMC,OAAO,CACdC,IAAK,OACLC,OAAQxB,KAAKqB,MAAMI,qBAAqB,OAAQ,CAAEC,MAAO,EAAGC,IAAK,IACjEC,UAAW,GACXC,QAAS,IAGb7B,KAAKqB,MAAMC,OAAO,CACdC,IAAK,OACLC,OAAQ,CAAE,CAAED,IAAK,OAAQO,MAAO,IAChCF,UAAW,KAGf5B,KAAKqB,MAAMC,OAAO,CACdC,IAAK,QACLC,OAAQxB,KAAKqB,MAAMI,qBAAqB,OAAQ,CAAEC,MAAO,EAAGC,IAAK,IACjEC,UAAW,GACXC,QAAS,IAKb7B,KAAKU,QAAQC,IAAIoB,SAAS/B,KAAKL,OAAQK,KAAKgC,WAI5ChC,KAAKiC,UAAYjC,KAAKW,IAAIuB,KAAK,GAAI,GAAI,WAAY,CAAEC,SAAU,OAAQC,KAAM,W,oBAKnF,WACMpC,KAAKiB,QAAQoB,KAAKC,QAEhBtC,KAAKL,OAAO4C,cAAc,KAE1BvC,KAAKL,OAAO0B,MAAMmB,KAAK,QAAQ,IAExBxC,KAAKiB,QAAQwB,MAAMH,QAE1BtC,KAAKL,OAAO4C,aAAa,KAEzBvC,KAAKL,OAAO0B,MAAMmB,KAAK,SAAS,KAIhCxC,KAAKL,OAAO4C,aAAa,GAEzBvC,KAAKL,OAAO0B,MAAMmB,KAAK,SAGrBxC,KAAKiB,QAAQyB,GAAGJ,QAElBtC,KAAKL,OAAOgD,cAAc,Q,GApGKC,IAAOC,OCH3BC,E,kDACjB,WAAYC,EAAaC,EAAOC,GAAS,IAAD,sBACtC,IAAMC,EAAS,CACbC,KAAMP,IAAOQ,KACbJ,MAAOA,EACPC,OAAQA,EACRvC,QAAS,CACL2C,QAAS,SACTC,OAAQ,CACJC,QAAS,CAAEC,EAAG,KACdC,OAAO,KATqB,OAatC,cAAMP,IAGDQ,QAAU,GAEf,EAAKX,YAAcA,EACnB,EAAKY,MAAMhD,IAAI,cAAelB,GAC9B,EAAKkE,MAAMjC,MAAM,eApBqB,E,+CAsBxC,WAGI,OAFArB,QAAQC,IAAIN,MACZK,QAAQC,IAAIN,KAAK4D,KAAKC,IAAM7D,KAAK4D,KAAKE,WAC/B9D,KAAK4D,KAAKC,IAAM7D,KAAK4D,KAAKE,c,GA1BDlB,IAAOmB,M,eC4BhCC,MA3Bf,YAKG,EAJDC,UAIC,EAHDC,eAGE,IAFFnB,EAEC,EAFDA,YACAoB,EACC,EADDA,YAcA,OAZAC,qBAAU,WACR,IAAMnB,EAASoB,OAAOC,YAChBtB,EAAQqB,OAAOE,WAIrB,OAHAlE,QAAQC,IAAI2C,GACZuB,SAASC,KAAO,IAAIC,EAAW3B,EAAaE,EAAQD,GAE7C,WACLmB,EAAYQ,KAAKC,MAAMJ,SAASC,KAAKI,cAAgB,MACrDL,SAASC,KAAKK,SAAQ,MAEvB,IAGD,qBAAKC,UAAU,qBAAf,SACE,cAAC,IAAD,CAAMA,UAAU,cAAcC,GAAI,IAAlC,qB,aCGSC,MArBf,YAAuD,EAAxClC,YAAyC,IAA5BmB,EAA2B,EAA3BA,eAAgBgB,EAAW,EAAXA,SAElCC,EAAc,SAACC,GACjBlB,EAAekB,IAIrB,OACE,sBAAKL,UAAU,OAAf,UACI,sEACA,gEAAiCG,EAAjC,cACA,sBAAKH,UAAU,mBAAf,UACA,wBAAQA,UAAU,aAAaM,QAAS,WAAOF,EAAY,QAA3D,wBACA,wBAAQJ,UAAU,gBAAgBM,QAAS,WAAOF,EAAY,WAA9D,8BALJ,IAMW,cAAC,IAAD,CAAMG,GAAI,eAAeP,UAAW,sBAAsBC,GAAI,WAA9D,+BCYAO,MA3Bf,WACE,MAAsCC,mBAAS,OAA/C,mBAAOzC,EAAP,KAAoBmB,EAApB,KACA,EAAgCsB,mBAAS,GAAzC,mBAAON,EAAP,KAAiBf,EAAjB,KAIA,OAFA9D,QAAQC,IAAI,SAGV,cAAC,IAAD,UACA,qBAAKyE,UAAU,MAAf,SACA,eAAC,IAAD,WACA,cAAC,IAAD,CACKU,KAAK,IACLC,QAAS,cAAC,EAAD,CAAM3C,YAAaA,EAAamB,eAAgBA,EAAgBgB,SAAUA,MAErF,cAAC,IAAD,CACEO,KAAK,WACLC,QAAS,cAAC,EAAD,CAAoB3C,YAAaA,EAAamB,eAAgBA,EAAgBC,YAAaA,EAAaF,UAAWlB,cCfrI4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASsB,eAAe,W","file":"static/js/main.258954c0.chunk.js","sourcesContent":["import Phaser from \"phaser\";\r\n// import logo from \"../assets/phaser3-logo.png\";\r\n// import red from \"../assets/red.png\";\r\n// import yellow from \"../assets/yellow.png\";\r\n// import sky from \"../assets/space3.png\";\r\n\r\nexport default class PhaserScene extends Phaser.Scene {\r\n  \r\n  constructor() {\r\n    super(\"PhaserScene\");\r\n    this.gameOver = false;\r\n    this.player = undefined;\r\n    this.score = 0;\r\n    let scoreText = undefined;\r\n    this.gameInfo = {\r\n      playTime: 0,\r\n    };\r\n  }\r\n  \r\n\r\n  preload() {\r\n\r\n    // this.load.image('backdrop', 'assets/backdrop.png')\r\n   \r\n    this.load.spritesheet('dude', \r\n        'assets/dude.png',\r\n        { frameWidth: 32, frameHeight: 48 }\r\n    );\r\n    console.log(this)\r\n  }\r\n\r\n  create() {\r\n\r\n        // this.add.image(400, 1500, 'background');\r\n       \r\n        this.cameras.main.setViewport(0, 0, 400, 800);\r\n        \r\n    \r\n        // this.platforms = this.physics.add.staticGroup();\r\n\r\n        // this.platforms.create(400, 568, 'ground').setScale(2).refreshBody();\r\n\r\n        // this.platforms.create(40, 100, 'ground');\r\n        \r\n\r\n        this.player = this.physics.add.sprite(200, 0, 'dude');\r\n\r\n        this.player.body.setGravityY(0)\r\n        this.player.setBounce(0.2);\r\n        this.player.setCollideWorldBounds(true);\r\n\r\n        this.cursors = this.input.keyboard.createCursorKeys();\r\n\r\n        this.anims.create({\r\n            key: 'left',\r\n            frames: this.anims.generateFrameNumbers('dude', { start: 0, end: 3 }),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'turn',\r\n            frames: [ { key: 'dude', frame: 4 } ],\r\n            frameRate: 20\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'right',\r\n            frames: this.anims.generateFrameNumbers('dude', { start: 5, end: 8 }),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n        \r\n        // this.physics.add.collider(this.stars, this.platforms);\r\n        \r\n        this.physics.add.collider(this.player, this.platforms);\r\n\r\n        // this.cameras.main.startFollow(this.player);\r\n\r\n        this.scoreText = this.add.text(50, 16, 'score: 0', { fontSize: '32px', fill: '#000' });\r\n\r\n        \r\n  }\r\n\r\n  update(){\r\n    if (this.cursors.left.isDown)\r\n        {\r\n          this.player.setVelocityX(-160);\r\n\r\n          this.player.anims.play('left', true);\r\n        }\r\n        else if (this.cursors.right.isDown)\r\n        {\r\n          this.player.setVelocityX(160);\r\n\r\n          this.player.anims.play('right', true);\r\n        }\r\n        else\r\n        {\r\n          this.player.setVelocityX(0);\r\n\r\n          this.player.anims.play('turn');\r\n        }\r\n\r\n        if (this.cursors.up.isDown)\r\n        {\r\n          this.player.setVelocityY(-50);\r\n        }\r\n  }\r\n}","import Phaser from \"phaser\";\r\nimport PhaserScene from \"./PhaserScene\";\r\n\r\nexport default class PhaserGame extends Phaser.Game {\r\n    constructor(colorChoice, width, height) {\r\n      const config = {\r\n        type: Phaser.AUTO,\r\n        width: width,\r\n        height: height,\r\n        physics: {\r\n            default: 'arcade',\r\n            arcade: {\r\n                gravity: { y: 300 },\r\n                debug: false\r\n            }\r\n        },\r\n      };\r\n      super(config);\r\n      \r\n\r\n      this.globals = {  };\r\n\r\n      this.colorChoice = colorChoice;\r\n      this.scene.add(\"PhaserScene\", PhaserScene);\r\n      this.scene.start(\"PhaserScene\");\r\n    }\r\n    getPlayTime() {\r\n        console.log(this)\r\n        console.log(this.loop.now - this.loop.startTime)\r\n        return this.loop.now - this.loop.startTime\r\n    }\r\n  }\r\n  ","import { react, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CreateGame from \"../phaser/CreateGame\";\r\nimport \"../styles/ReactGameContainer.css\";\r\nfunction ReactGameContainer({\r\n  colorProp,\r\n  setColorChoice,\r\n  colorChoice,\r\n  setGameTime,\r\n}) {\r\n  useEffect(() => {\r\n    const height = window.innerHeight;\r\n    const width = window.innerWidth;\r\n    console.log(height);\r\n    document.game = new CreateGame(colorChoice, height, width);\r\n\r\n    return () => {\r\n      setGameTime(Math.round(document.game.getPlayTime() / 1000));\r\n      document.game.destroy(true);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"ReactGameContainer\">\r\n      <Link className=\"quit-button\" to={\"/\"}>\r\n        Quit\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReactGameContainer;\r\n","import '../styles/Menu.css'\r\nimport {react, useState} from 'react'\r\nimport ReactGameContainer from './ReactGameContainer'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Menu({colorChoice, setColorChoice, gameTime}) {\r\n\r\n    const chooseColor = (color) => {\r\n        setColorChoice(color)\r\n    }\r\n\r\n    \r\n  return (\r\n    <div className=\"Menu\">\r\n        <h1>What colour should the particles be?</h1>\r\n        <h2>{`The last game lasted for ${gameTime} seconds`}</h2>\r\n        <div className=\"button-container\">\r\n        <button className=\"red button\" onClick={() => {chooseColor('red')}} >Red Please</button>\r\n        <button className=\"yellow button\" onClick={() => {chooseColor('yellow')}} >Yellow Thanks</button>\r\n        </div> <Link id={'start-button'}className={\"button start-button\"}to={\"/newgame\"}> Start Phaser</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Menu;\r\n","import './App.css';\r\nimport ReactGameContainer from './components/ReactGameContainer';\r\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport Menu from './components/Menu';\r\nfunction App() {\r\n  const [colorChoice, setColorChoice] = useState('red')\r\n  const [gameTime, setGameTime] = useState(0)\r\n\r\n  console.log(\"Hello\")\r\n\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n    <Routes>\r\n    <Route\r\n         path='/'\r\n         element={<Menu colorChoice={colorChoice} setColorChoice={setColorChoice} gameTime={gameTime}/>}\r\n         />\r\n       <Route\r\n         path='/newgame'\r\n         element={<ReactGameContainer colorChoice={colorChoice} setColorChoice={setColorChoice} setGameTime={setGameTime} colorProp={colorChoice}/>}\r\n         />\r\n          </Routes>\r\n\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}